### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""The battlefield environment"""
enum Arena {
  DESERT
  GRASSLAND
  HILLS
  OCEAN
  URBAN
}

"""Create Dino mutation result"""
union CreateDino = NewDino | Unauthorized

type Dino implements Identifiable {
  """The arena environment this Dinosaur most effective in"""
  arena: Arena!

  """The attack for this class of Dinosaur"""
  attack: Float!

  """The damage dealt by this Dinosaur"""
  damage(
    """The active arena"""
    arena: Arena!
  ): Float!

  """The amount of healing this class Dinosaur gain when resting"""
  healing: Float!

  """The current health of this Dinosaur"""
  hp: Float!

  """A unique ID for this entity"""
  id: ID!

  """The current level of this Dinosaur, which affects its attack and HP"""
  level: Int!

  """The max hp of this Dinosaur"""
  maxHp: Float!

  """The name of this Dinosaur"""
  name: String!

  """The hp percentage of this Dinosaur"""
  percentage: Int!

  """The speed for this class of Dinosaur"""
  speed: Float!

  """The variance for this Dinosaur"""
  variant: Variant!
}

"""Creation argument(s) for Dino(s)"""
input DinoCreate {
  """The level of the Dino"""
  level: Int! = 1

  """The optional nickname of the Dino"""
  name: String

  """The variant of the Dino"""
  variant: Variant!
}

"""Filter argument(s) for Dino(s)"""
input DinoFilter {
  """The arena of choice of one or many Dino(s)"""
  arena: Arena

  """The limit of result to take"""
  take: Int! = 20

  """The variant of one or many Dino(s)"""
  variant: Variant
}

interface Identifiable {
  """A unique ID for this entity"""
  id: ID!
}

type Mutation {
  """Create a Dino"""
  createDino(
    """The arguments to create a dino"""
    input: DinoCreate!
  ): CreateDino!

  """Create a randomly generated Dino"""
  createRandomDino: CreateDino!
}

"""New Dino has been created"""
type NewDino {
  """The new Dino created"""
  dino: Dino!
}

type Query {
  """Find a Dino by their ID"""
  dinosaur(
    """The ID of a Dino to be found"""
    input: SearchByID!
  ): Dino

  """Get all dinosaurs"""
  dinosaurs(
    """The filter to apply"""
    input: DinoFilter!
  ): [Dino!]!
}

"""Search an Identifiable by the ID"""
input SearchByID {
  """The ID to be search against"""
  id: ID!
}

"""An operation is made by an unauthorized user"""
type Unauthorized {
  """What operation is done that caused an unauthorized error"""
  operation: String!
}

"""The variant of dinosaur"""
enum Variant {
  """Bold comes in black"""
  black

  """Jumping expert"""
  blue

  """Runs swiftly"""
  green

  """Ouch.."""
  pink

  """A good offense in the best defense"""
  red

  """Boom"""
  slate

  """Jack of all trades"""
  white

  """Can't lose if you don't get hit"""
  yellow
}